pacotes <- c("plotly", "tidyverse", "ggrepel", "knitr", "kableExtra", "reshape2", "PerformanceAnalytics", "psych", "ltm", "Hmisc", "readxl")
Passo Inicial -> Input dos Dados e Visualizações Superficiais
•	Carregamento da base de dados:
emprestimo <- read_excel("emprestimo_banco.xlsx")
•	Estatísticas descritivas das variáveis:
summary(emprestimo[,2:7])
•	Coeficientes de Correlação de Pearson para cada par de variáveis:
*Queremos verificar qual a correlação das variáveis entre si (entre -1 e 1);
rho <- rcorr(as.matrix(emprestimo[,2:7]), type="pearson") 
*Matriz de correlações
corr_coef <- rho$r
*Matriz com p-valor dos coeficientes
corr_sig <- round(rho$P, 5)
•	Elaboração de um mapa de calor das correlações de Pearson entre as variáveis
ggplotly( emprestimo[,2:7] %>% cor() %>% melt() %>% rename(Correlação = value) %>% ggplot() + geom_tile(aes(x = Var1, y = Var2, fill = Correlação)) + geom_text(aes(x = Var1, y = Var2, label = format(Correlação, digits = 1)), size = 5) + scale_fill_viridis_b() + labs(x = NULL, y = NULL) + theme_bw())
•	Visualizações das distribuições das variáveis, scatters, valores das correlações
*Aqui é um gráfico que tem tudo (ruim de ver)
chart.Correlation(emprestimo[,2:7], histogram = TRUE, pch = "+")
Passo Intermediário -> Elaboração a Análise Fatorial Por Componentes Principais
•	Teste de esfericidade de Bartlett
*Verificaremos o p-valor para saber se podemos continuar com os testes, nesse caso se o p-valor é menor que 0,05, podemos continuar com a análise fatorial
cortest.bartlett(emprestimo[,2:7])
•	Elaboração da Análise fatorial por componentes principais
*Aqui mostra os componentes com a proporção de variância
*X% da variância das variáveis originais estão compartilhadas em....
fatorial <- principal(emprestimo[,2:7], nfactors = length(emprestimo[,2:7]), rotate = "none", scores = TRUE)
fatorial
•	Montagem dos Eigenvalues (autovalores)
*Aqui representa a quantidade máxima de possíveis fatores
eigenvalues <- round(fatorial$values, 5)
eigenvalues
round(sum(eigenvalues), 2)
•	Identificação da variância compartilhada em cada fator
variancia_compartilhada <- as.data.frame(fatorial$Vaccounted) %>% slice(1:3)
rownames(variancia_compartilhada) <- c("Autovalores","Prop. da Variância","Prop. da Variância Acumulada")
•	Variância compartilhada pelas variáveis originais para a formação de cada fator
round(variancia_compartilhada, 3) %>% kable() %>% kable_styling(bootstrap_options = "striped", full_width = FALSE, font_size = 20)
Passo Final -> Fatores extraídos a partir de autovalores maiores que 1
•	Definição da quantidade de fatores com eigenvalues maiores que 1
k <- sum(eigenvalues > 1)
print(k)
•	Elaboração da Análise fatorial por componentes principais (k = 2)
fatorial2 <- principal(emprestimo[,2:7], nfactors = k, rotate = "none", scores = TRUE)
fatorial2
•	Cálculo dos scores fatoriais
*Aqui são vistos os pesos de cada variável para formação de cada componente;
scores_fatoriais <- as.data.frame(fatorial2$weights)
•	Visualizações dos scores fatoriais
round(scores_fatoriais, 3) %>% kable() %>% kable_styling(bootstrap_options = "striped", full_width = FALSE, font_size = 20)
•	Cálculo dos fatores propriamente ditos
fatores <- as.data.frame(fatorial2$scores)
View(fatores)
•	Coeficientes de Correlação de Pearson para cada par de fatores (ortogonais)
rho <- rcorr(as.matrix(fatores), type="pearson")
round(rho$r, 4)
•	Cálculo das cargas fatoriais
*Correlação de Pearson entre os fatores e as variáveis originais
*Aqui a importância de cada variável na composição daquele fator
*Aqui temos uma pista de como nomear cada Componente
cargas_fatoriais <- as.data.frame(unclass(fatorial2$loadings))
•	Visualizações das cargas fatoriais
round(cargas_fatoriais, 3) %>% kable() %>% kable_styling(bootstrap_options = "striped", full_width = FALSE, font_size = 20)
•	Cálculo das comunalidades
*Mostra a variância compartilhada por variável original nos fatores após redução dos fatores;
*Verifica a perda de variância dos fatores após redução do número de fatores;
*A comunalidade máxima é 1,00. Cada exclusão de fator reduz esse número e assim podemos ver o quanto cada fator contribui para a variância compartilhada;
comunalidades <- as.data.frame(unclass(fatorial2$communality)) %>% rename(comunalidades = 1)
•	Visualizações das comunalidades para os 2 fatores extraídos
round(comunalidades, 3) %>% kable() %>% kable_styling(bootstrap_options = "striped", full_width = FALSE, font_size = 20)
•	Loading plot com as cargas dos 2 fatores
cargas_fatoriais[, 1:2] %>% data.frame() %>% rownames_to_column("variáveis") %>% ggplot(aes(x = PC1, y = PC2, label = variáveis)) + geom_point(color = "darkorchid", size = 3) + geom_text_repel() + geom_vline(aes(xintercept = 0), linetype = "dashed", color = "orange") + geom_hline(aes(yintercept = 0), linetype = "dashed", color = "orange") + expand_limits(x= c(-1.25, 0.25), y=c(-0.25, 1)) + theme_bw()
